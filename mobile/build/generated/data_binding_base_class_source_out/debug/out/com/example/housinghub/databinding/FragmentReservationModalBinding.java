// Generated by view binder compiler. Do not edit!
package com.example.housinghub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.housinghub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentReservationModalBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnConfirmReservation;

  @NonNull
  public final TextView txtEndDate;

  @NonNull
  public final TextView txtPricePerNight;

  @NonNull
  public final TextView txtPropertyName;

  @NonNull
  public final TextView txtStartDate;

  @NonNull
  public final TextView txtTotalCost;

  private FragmentReservationModalBinding(@NonNull FrameLayout rootView,
      @NonNull Button btnConfirmReservation, @NonNull TextView txtEndDate,
      @NonNull TextView txtPricePerNight, @NonNull TextView txtPropertyName,
      @NonNull TextView txtStartDate, @NonNull TextView txtTotalCost) {
    this.rootView = rootView;
    this.btnConfirmReservation = btnConfirmReservation;
    this.txtEndDate = txtEndDate;
    this.txtPricePerNight = txtPricePerNight;
    this.txtPropertyName = txtPropertyName;
    this.txtStartDate = txtStartDate;
    this.txtTotalCost = txtTotalCost;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentReservationModalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentReservationModalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_reservation_modal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentReservationModalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnConfirmReservation;
      Button btnConfirmReservation = ViewBindings.findChildViewById(rootView, id);
      if (btnConfirmReservation == null) {
        break missingId;
      }

      id = R.id.txtEndDate;
      TextView txtEndDate = ViewBindings.findChildViewById(rootView, id);
      if (txtEndDate == null) {
        break missingId;
      }

      id = R.id.txtPricePerNight;
      TextView txtPricePerNight = ViewBindings.findChildViewById(rootView, id);
      if (txtPricePerNight == null) {
        break missingId;
      }

      id = R.id.txtPropertyName;
      TextView txtPropertyName = ViewBindings.findChildViewById(rootView, id);
      if (txtPropertyName == null) {
        break missingId;
      }

      id = R.id.txtStartDate;
      TextView txtStartDate = ViewBindings.findChildViewById(rootView, id);
      if (txtStartDate == null) {
        break missingId;
      }

      id = R.id.txtTotalCost;
      TextView txtTotalCost = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalCost == null) {
        break missingId;
      }

      return new FragmentReservationModalBinding((FrameLayout) rootView, btnConfirmReservation,
          txtEndDate, txtPricePerNight, txtPropertyName, txtStartDate, txtTotalCost);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
