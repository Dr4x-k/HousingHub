// Generated by view binder compiler. Do not edit!
package com.example.housinghub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.housinghub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPropertyModalBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnAddProperty;

  @NonNull
  public final EditText txtDescription;

  @NonNull
  public final EditText txtLocation;

  @NonNull
  public final EditText txtMaxGuests;

  @NonNull
  public final EditText txtPriceNight;

  @NonNull
  public final EditText txtTitle;

  private FragmentPropertyModalBinding(@NonNull FrameLayout rootView,
      @NonNull Button btnAddProperty, @NonNull EditText txtDescription,
      @NonNull EditText txtLocation, @NonNull EditText txtMaxGuests,
      @NonNull EditText txtPriceNight, @NonNull EditText txtTitle) {
    this.rootView = rootView;
    this.btnAddProperty = btnAddProperty;
    this.txtDescription = txtDescription;
    this.txtLocation = txtLocation;
    this.txtMaxGuests = txtMaxGuests;
    this.txtPriceNight = txtPriceNight;
    this.txtTitle = txtTitle;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPropertyModalBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPropertyModalBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_property_modal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPropertyModalBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddProperty;
      Button btnAddProperty = ViewBindings.findChildViewById(rootView, id);
      if (btnAddProperty == null) {
        break missingId;
      }

      id = R.id.txtDescription;
      EditText txtDescription = ViewBindings.findChildViewById(rootView, id);
      if (txtDescription == null) {
        break missingId;
      }

      id = R.id.txtLocation;
      EditText txtLocation = ViewBindings.findChildViewById(rootView, id);
      if (txtLocation == null) {
        break missingId;
      }

      id = R.id.txtMaxGuests;
      EditText txtMaxGuests = ViewBindings.findChildViewById(rootView, id);
      if (txtMaxGuests == null) {
        break missingId;
      }

      id = R.id.txtPriceNight;
      EditText txtPriceNight = ViewBindings.findChildViewById(rootView, id);
      if (txtPriceNight == null) {
        break missingId;
      }

      id = R.id.txtTitle;
      EditText txtTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle == null) {
        break missingId;
      }

      return new FragmentPropertyModalBinding((FrameLayout) rootView, btnAddProperty,
          txtDescription, txtLocation, txtMaxGuests, txtPriceNight, txtTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
