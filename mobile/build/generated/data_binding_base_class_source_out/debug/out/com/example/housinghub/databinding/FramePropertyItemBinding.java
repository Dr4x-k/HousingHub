// Generated by view binder compiler. Do not edit!
package com.example.housinghub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.housinghub.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FramePropertyItemBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final LinearLayout actionButtonsContainer;

  @NonNull
  public final MaterialButton btnDelete;

  @NonNull
  public final MaterialButton btnEdit;

  @NonNull
  public final MaterialButton btnReserve;

  @NonNull
  public final TextView txtDescription;

  @NonNull
  public final TextView txtLocation;

  @NonNull
  public final TextView txtMaxGuests;

  @NonNull
  public final TextView txtPriceNight;

  @NonNull
  public final TextView txtTitle;

  private FramePropertyItemBinding(@NonNull MaterialCardView rootView,
      @NonNull LinearLayout actionButtonsContainer, @NonNull MaterialButton btnDelete,
      @NonNull MaterialButton btnEdit, @NonNull MaterialButton btnReserve,
      @NonNull TextView txtDescription, @NonNull TextView txtLocation,
      @NonNull TextView txtMaxGuests, @NonNull TextView txtPriceNight, @NonNull TextView txtTitle) {
    this.rootView = rootView;
    this.actionButtonsContainer = actionButtonsContainer;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.btnReserve = btnReserve;
    this.txtDescription = txtDescription;
    this.txtLocation = txtLocation;
    this.txtMaxGuests = txtMaxGuests;
    this.txtPriceNight = txtPriceNight;
    this.txtTitle = txtTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static FramePropertyItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FramePropertyItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.frame_property_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FramePropertyItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionButtonsContainer;
      LinearLayout actionButtonsContainer = ViewBindings.findChildViewById(rootView, id);
      if (actionButtonsContainer == null) {
        break missingId;
      }

      id = R.id.btnDelete;
      MaterialButton btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      MaterialButton btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.btnReserve;
      MaterialButton btnReserve = ViewBindings.findChildViewById(rootView, id);
      if (btnReserve == null) {
        break missingId;
      }

      id = R.id.txtDescription;
      TextView txtDescription = ViewBindings.findChildViewById(rootView, id);
      if (txtDescription == null) {
        break missingId;
      }

      id = R.id.txtLocation;
      TextView txtLocation = ViewBindings.findChildViewById(rootView, id);
      if (txtLocation == null) {
        break missingId;
      }

      id = R.id.txtMaxGuests;
      TextView txtMaxGuests = ViewBindings.findChildViewById(rootView, id);
      if (txtMaxGuests == null) {
        break missingId;
      }

      id = R.id.txtPriceNight;
      TextView txtPriceNight = ViewBindings.findChildViewById(rootView, id);
      if (txtPriceNight == null) {
        break missingId;
      }

      id = R.id.txtTitle;
      TextView txtTitle = ViewBindings.findChildViewById(rootView, id);
      if (txtTitle == null) {
        break missingId;
      }

      return new FramePropertyItemBinding((MaterialCardView) rootView, actionButtonsContainer,
          btnDelete, btnEdit, btnReserve, txtDescription, txtLocation, txtMaxGuests, txtPriceNight,
          txtTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
